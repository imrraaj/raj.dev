---
import PageLayout from "../layout/PageLayout.astro";
import { ExternalLinkIcon, GithubIcon } from "lucide-react";

const projects = [
  {
    title: "Byte Stream",
    description: "A no-bullshit video player written in c",
    features: [
      "Built from scratch in c for recreational purposes",
      "Handles video processing and audio playback using ffmpeg",
      "Uses raylib for rendering and user interface",
      "Supports basic video formats like mp4 and avi",
      "Supports custom shaders applied to video frames",
      "Custom shaders for dimming, brightness, and contrast adjustments, color grading, and more",
    ],
    technologies: "C, ffmpeg, Raylib",
    github: "https://github.com/imrraaj/byte-stream",
  },
  {
    title: "gocached",
    description: "An attempt to build a redis clone in go",
    features: [
      "Implements core redis functionality",
      "Concurrent client handling with goroutines",
      "Network programming",
      "Supports basic commands like GET, SET, DEL, and more",
      "Write Ahead Log (WAL) for data persistence using a custom binary format",
      "Supports basic data structures like strings, lists, sets, and hashes",
    ],
    technologies: "Golang, TCP Networking, Concurrent Maps",
    github: "https://github.com/imrraaj/gocached",
  },
  {
    title: "dexify",
    description: "modern web application built with typescript",
    features: [
      "Frontend for Uniswap V2 DEX for token buy/sell",
      "Added support for buy/sell at specific price using limit orders",
      "Realtime token price using Uniswap Liquidity pools",
      "Supports multiple blockchains like Arbitrum, Base, and BSC",
    ],
    technologies: "Typescript, React, Solidity, Tailwind CSS",
    github: "https://github.com/imrraaj/dexify",
  },
  {
    title: "gloom",
    description: "bloom filter implementation in c++",
    features: [
      "Efficient probabilistic data structure implementation",
      "Hash function optimization and collision handling",
      "Memory-efficient design for large datasets",
    ],
    technologies: "C++, Data Structures, Algorithms",
    github: "https://github.com/imrraaj/gloom",
  },
];
---

<PageLayout title="Projects">
  <div class="space-y-8">
    {
      projects.map((project) => (
        <div class="border border-zinc-700 hover:border-emerald-700 rounded-lg p-6">
          <div class="flex items-center justify-between">
            <h2 class="text-2xl font-black font-primary">
              <a
                href={project.github}
                class="hover:text-accent transition-colors duration-200"
              >{project.title}</a></h2>
            <div class="flex gap-3">
              <a
                href={project.github}
                class="text-zinc-500 hover:text-accent transition-colors duration-200"
              >
                <GithubIcon size={20} />
              </a>
              <a
                href={project.github}
                class="text-zinc-500 hover:text-accent transition-colors duration-200"
              >
                <ExternalLinkIcon size={20} />
              </a>
            </div>
          </div>
          <p class="text-zinc-300 text-sm mb-4">{project.description}</p>
          <div class="mb-4">
            <h4 class="text-zinc-300">Features</h4>
            <ul class="list-disc px-4 text-sm text-white space-y-1">
              {project.features.map((feature) => (
                <li>{feature}</li>
              ))}
            </ul>
          </div>
          <div>
            <h4 class="text-zinc-300">Stack</h4>
            <p class="text-white text-sm">{project.technologies}</p>
          </div>
        </div>
      ))
    }
  </div>
</PageLayout>
